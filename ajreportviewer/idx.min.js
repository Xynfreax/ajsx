$$.require(["str","../../vista/gfunctions"],function(){$.add={tag:"ajreportviewer_e",id:"ajreportviewer",load_r:function(){var th=this;function fornow(){function $jscomp$async$generator(){var $jscomp$generator$state=0;var resp;var $jscomp$generator$next$arg0;function $jscomp$generator$impl($jscomp$generator$next$arg,$jscomp$generator$throw$arg){while(1)switch($jscomp$generator$state){case 0:$jscomp$generator$state=1;return{value:$_.query("reporteFichainscripcion",{typedoc:"pdf",id:1}),done:false};
case 1:if(!($jscomp$generator$throw$arg!==undefined)){$jscomp$generator$state=2;break}$jscomp$generator$state=-1;throw $jscomp$generator$throw$arg;case 2:$jscomp$generator$next$arg0=$jscomp$generator$next$arg;resp=$jscomp$generator$next$arg0;console.log(resp.data);th.loadReport(resp.data);$jscomp$generator$state=-1;default:return{value:undefined,done:true}}}var iterator=({next:function(arg){return $jscomp$generator$impl(arg,undefined)},throw:function(arg){return $jscomp$generator$impl(undefined,arg)},
return:function(arg){throw Error("Not yet implemented");}});$jscomp.initSymbolIterator();iterator[Symbol.iterator]=function(){return this};return iterator}return $jscomp.executeAsyncGenerator($jscomp$async$generator())}},loadReport:function(doc){var $jscomp$async$this=this;function $jscomp$async$generator(){var $jscomp$generator$state=0;var myprom;var myreject;var myresolve;var downloadUrl;var th;function $jscomp$generator$impl($jscomp$generator$next$arg,$jscomp$generator$throw$arg){while(1)switch($jscomp$generator$state){case 0:th=
$jscomp$async$this;downloadUrl=doc;th.myiframe.src=downloadUrl;myprom=new Promise(function(resolve,reject){th.myiframe.dom.onload=function(){resolve()};th.myiframe.dom.onerror=function(e){reject("EEERRROOO: "+e)}});$jscomp$generator$state=1;return{value:myprom,done:false};case 1:if(!($jscomp$generator$throw$arg!==undefined)){$jscomp$generator$state=2;break}$jscomp$generator$state=-1;throw $jscomp$generator$throw$arg;case 2:$jscomp$generator$state=-1;return{value:true,done:true};$jscomp$generator$state=
-1;default:return{value:undefined,done:true}}}var iterator=({next:function(arg){return $jscomp$generator$impl(arg,undefined)},throw:function(arg){return $jscomp$generator$impl(undefined,arg)},return:function(arg){throw Error("Not yet implemented");}});$jscomp.initSymbolIterator();iterator[Symbol.iterator]=function(){return this};return iterator}return $jscomp.executeAsyncGenerator($jscomp$async$generator())},print:function(){this.myiframe.display="block";this.myiframe.dom.contentWindow.print()},_loadReport:function(urlPrint){var th=
this;var dataSend={"template":{"name":"invoice-template"},"data":{"to":"Pavel Sladek","from":"Jan Blaha","price":800}};dataSend={template:{content:"Hello world",recipe:"electron-pdf"}};dataSend={template:{name:"electron",electron:{url:"http://www.muylinux.com/",allowLocalFilesAccess:true,waitForJS:false,width:"1366px",height:"1080px",format:"A4",marginsType:0,printBackground:true,landscape:false}}};function mycallback(resp){console.log("--Respuesta de jsreport:",resp);console.log(resp);var byteString=
resp;var ab=new ArrayBuffer(byteString.length);var ia=new Uint8Array(ab);for(var i=0;i<byteString.length;i++)ia[i]=byteString.charCodeAt(i);var downloadUrl=URL.createObjectURL(resp);th.myiframe.src=downloadUrl}var myxhr=function(data,callbackExito,callbackError){var xhr=new XMLHttpRequest;var xResponse=null;var serverIP=location.hostname;xhr.addEventListener("load",function(){var state=this.readyState;var responseCode=xhr.status;console.log("request.onload called. readyState: "+state+"; status: "+
responseCode);if(state==this.DONE&&responseCode==200){console.log("si entro");var xResponse="";if(data.content=="getReporte")xResponse=this.response;else xResponse=this.response;callbackExito(xResponse)}else;});xhr.addEventListener("error",function(e){console.log("--Error en xhr");if(callbackError!==undefined)callbackError(e);else alert("No se pudo conectar con el servidor: "+serverIP)});serverIP="localhost";xhr.open("POST","http://"+serverIP+":5488/api/report");if(data.content=="getReporte");xhr.responseType=
"blob";xhr.setRequestHeader("Content-Type","application/json;charset=UTF-8");xhr.send(JSON.stringify(data))};myxhr(dataSend,mycallback)}}});
